# Generated by Django 5.2.4 on 2025-07-14 21:31

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Competence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom de la compétence')),
                ('description', models.TextField(blank=True, verbose_name="Critères d'évaluation")),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=150, unique=True, verbose_name='Nom du service')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Service Médical',
                'verbose_name_plural': 'Services Médicaux',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Observation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('BROUILLON', 'Brouillon'), ('EN_ATTENTE', 'En attente de relecture'), ('A_CORRIGER', 'À corriger'), ('VALIDEE', 'Validée')], default='BROUILLON', max_length=15)),
                ('donnees', models.JSONField(blank=True, null=True, verbose_name='Données saisies')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('date_soumission', models.DateTimeField(blank=True, null=True, verbose_name='Date de soumission')),
                ('etudiant', models.ForeignKey(limit_choices_to={'role': 'ETUDIANT'}, on_delete=django.db.models.deletion.CASCADE, related_name='observations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Observation',
                'verbose_name_plural': 'Observations',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='FichierMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fichier', models.FileField(upload_to='fichiers_observations/%Y/%m/', verbose_name='Fichier')),
                ('legende', models.CharField(blank=True, max_length=255, verbose_name='Légende')),
                ('date_upload', models.DateTimeField(auto_now_add=True)),
                ('observation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fichiers', to='core.observation')),
            ],
            options={
                'verbose_name': 'Fichier Média',
                'verbose_name_plural': 'Fichiers Média',
            },
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentaires_generaux', models.TextField(blank=True, verbose_name='Commentaires Généraux')),
                ('date_evaluation', models.DateTimeField(auto_now=True)),
                ('professeur', models.ForeignKey(limit_choices_to={'role': 'PROFESSEUR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluations_faites', to=settings.AUTH_USER_MODEL)),
                ('observation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='evaluation', to='core.observation')),
            ],
            options={
                'verbose_name': 'Évaluation',
                'verbose_name_plural': 'Évaluations',
            },
        ),
        migrations.CreateModel(
            name='TemplateObservation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='Nom du template')),
                ('structure', models.JSONField(help_text='Structure JSON décrivant les compétences et les questions du template.', verbose_name='Structure du formulaire')),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('actif', models.BooleanField(default=True, verbose_name='Template actif')),
                ('competences_evaluees', models.ManyToManyField(blank=True, to='core.competence', verbose_name='Compétences couvertes')),
                ('cree_par', models.ForeignKey(limit_choices_to={'role': 'PROFESSEUR'}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créateur')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='core.service')),
            ],
            options={
                'verbose_name': "Template d'Observation",
                'verbose_name_plural': "Templates d'Observation",
                'ordering': ['-date_creation'],
            },
        ),
        migrations.AddField(
            model_name='observation',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='observations', to='core.templateobservation'),
        ),
        migrations.CreateModel(
            name='EvaluationCompetence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)], verbose_name='Note')),
                ('commentaire_specifique', models.TextField(blank=True, verbose_name='Commentaire spécifique')),
                ('competence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.competence')),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes_competences', to='core.evaluation')),
            ],
            options={
                'verbose_name': 'Note par Compétence',
                'verbose_name_plural': 'Notes par Compétence',
                'unique_together': {('evaluation', 'competence')},
            },
        ),
    ]
